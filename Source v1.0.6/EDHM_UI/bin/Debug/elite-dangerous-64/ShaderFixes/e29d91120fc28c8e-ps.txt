//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0;                        // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// s0_s                              sampler      NA          NA             s0      1 
// s1_s                              sampler      NA          NA             s1      1 
// t0                                texture  float4          2d             t0      1 
// t1                                texture  float4          2d             t1      1 
// IniParams                         texture  float4          1d           t120      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   x           2     NONE   float   x   
// SV_Position              0   xyzw        3      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.x
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.zwzz, t1.xyzw, s0
mul r0.xyz, r0.xyzx, cb0[0].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s1
mad r0.xyz, r0.xyzx, r1.xyzx, -r1.xyzx
mad r0.xyz, v2.xxxx, r0.xyzx, r1.xyzx
mul r1.w, r1.w, v0.w
mul r0.xyz, r0.xyzx, v0.xyzx
mul r1.xyz, r0.xyzx, cb0[0].yyyy
ld_indexable(texture1d)(float,float,float,float) r0.xy, l(6, 0, 0, 0), t120.xwyz
eq r0.y, r0.y, l(1.000000)
if_nz r0.y
  lt r0.y, r1.y, r1.x
  mul r0.z, r1.z, l(5.000000)
  lt r0.z, r0.z, r1.x
  and r0.y, r0.y, r0.z
  and r0.y, r0.y, l(1)
  lt r0.z, v0.z, l(0.100000)
  and r0.y, r0.y, r0.z
  if_nz r0.y
    ld_indexable(texture1d)(float,float,float,float) r0.y, l(3, 0, 0, 0), t120.xzyw
    eq r2.xyzw, r0.yyyy, l(4.000000, 19.000000, 11.000000, 22.000000)
    lt r3.xyzw, v0.wwww, l(1.600000, 4.200000, 3.200000, 8.400000)
    and r2.xyzw, r2.xyzw, r3.xyzw
    and r0.zw, r2.xxxy, l(0, 0, 1, 1)
    lt r2.xy, l(0.000000, 0.000000, 0.000000, 0.000000), v1.xyxx
    lt r3.xy, v1.xyxx, l(0.500000, 1.000000, 0.000000, 0.000000)
    and r2.x, r2.x, r3.x
    and r2.x, r2.x, l(1)
    and r2.x, r2.x, r2.y
    and r2.x, r2.x, r3.y
    movc r2.y, r2.x, l(0), r1.w
    movc r0.z, r0.z, r2.y, r1.w
    movc r2.x, r2.x, l(0), r0.z
    movc r0.z, r0.w, r2.x, r0.z
    eq r0.x, r0.x, l(25.000000)
    if_nz r0.x
      eq r3.xyzw, r0.yyyy, l(8.000000, 5.000000, 9.000000, 21.000000)
      lt r4.xyzw, v0.wwww, l(4.000000, 2.400000, 5.000000, 40.000000)
      ne r0.w, v0.z, l(0.000000)
      and r0.w, r0.w, l(1)
      and r2.xy, r3.xyxx, r4.xyxx
      or r2.x, r2.y, r2.x
      and r2.x, r2.x, l(1)
      and r2.y, r4.z, l(1)
      and r3.xy, r2.yyyy, r3.zwzz
      or r2.x, r2.x, r3.x
      or r2.x, r3.y, r2.x
      eq r3.xyzw, r0.yyyy, l(10.000000, 20.000000, 34.000000, 35.000000)
      and r2.y, r3.x, r4.w
      and r2.y, r2.y, l(1)
      or r2.x, r2.y, r2.x
      lt r4.xyz, v0.wwww, l(2.000000, 36.000000, 8.800000, 0.000000)
      and r2.y, r4.x, l(1)
      and r3.xy, r2.yyyy, r3.ywyy
      or r2.x, r2.x, r3.x
      and r2.y, r3.z, r4.y
      and r2.y, r2.y, l(1)
      or r2.x, r2.y, r2.x
      or r2.x, r3.y, r2.x
      eq r2.y, r0.y, l(7.000000)
      and r2.y, r2.y, r4.z
      and r2.y, r2.y, l(1)
      or r2.x, r2.y, r2.x
      and r0.w, r0.w, r2.x
      movc r0.z, r0.w, l(0), r0.z
    endif 
    ne r0.w, v0.z, l(0.000000)
    and r0.w, r0.w, l(1)
    or r2.x, r2.w, r2.z
    eq r0.y, r0.y, l(32.000000)
    lt r2.y, v0.w, l(8.000000)
    and r0.y, r0.y, r2.y
    or r0.y, r0.y, r2.x
    and r0.y, r0.w, r0.y
    mul r0.w, r0.z, l(0.100000)
    movc r0.y, r0.y, r0.w, r0.z
    movc r1.w, r0.x, r0.y, r0.z
  endif 
endif 
mov o0.xyzw, r1.xyzw
ret 
// Approximately 81 instruction slots used
