//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0[2];                     // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// IniParams                         texture  float4          1d           t120      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// SV_Position              0   xyzw        2      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xyzw
dcl_output o0.xyzw
dcl_temps 6
dp2 r0.x, v1.xyxx, v1.xyxx
sqrt r0.x, r0.x
mul r1.x, cb0[0].z, cb0[1].x
mul r1.y, cb0[0].z, cb0[0].y
mul r0.yz, r1.xxyx, l(0.000000, 1000.000000, 1000.000000, 0.000000)
div r0.y, r0.y, r0.z
ge r0.w, r0.y, -r0.y
frc r0.y, |r0.y|
movc r0.y, r0.w, r0.y, -r0.y
mad r0.y, r0.y, r0.z, l(250.000000)
mad r0.x, r0.x, l(6.560000), l(-1.000000)
mul r0.x, r0.x, l(3.321928)
exp r0.x, r0.x
add r0.z, -cb0[1].z, l(1.000000)
div r0.z, r0.z, cb0[1].z
mul r0.z, r0.z, l(1000.000000)
mad r0.x, r0.x, l(500.000000), r0.z
add r0.x, r0.y, -r0.x
mul r0.x, |r0.x|, cb0[1].z
mad_sat r0.x, r0.x, l(-0.001000), l(1.000000)
mul r0.x, r0.x, cb0[1].y
mul r0.yzw, v0.xxyz, cb0[0].xxxx
mul r1.xyz, r0.yzwy, l(3.000000, 3.000000, 3.000000, 0.000000)
lt r2.xyzw, v1.wzzw, l(0.450000, 0.075000, 0.450000, 0.075000)
lt r3.xyzw, l(0.550000, 0.925000, 0.550000, 0.925000), v1.wzzw
or r2.xyzw, r2.xyzw, r3.xyzw
itof r2.xyzw, r2.xyzw
ne r2.xz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.zzxz
and r2.xy, r2.wyww, r2.xzxx
lt r2.zw, l(0.000000, 0.000000, 0.500000, 0.500000), v1.zzzw
and r0.y, r2.w, r2.z
lt r2.zw, v1.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
and r2.z, r2.w, r2.z
or r0.y, r0.y, r2.z
ftoi r2.xy, r2.xyxx
or r2.x, r2.y, r2.x
and r0.y, r0.y, r2.x
itof r0.y, r0.y
ne r0.y, r0.y, l(0.000000)
mul r0.x, r0.x, l(1.100000)
and r2.xy, r0.yyyy, l(0x3f800000, 0x3f800000, 0, 0)
mad_sat r0.x, r0.x, r2.y, r2.x
mul r2.w, r0.x, cb0[0].w
ld_indexable(texture1d)(float,float,float,float) r0.x, l(6, 0, 0, 0), t120.wxyz
eq r0.x, r0.x, l(1.000000)
if_nz r0.x
  ld_indexable(texture1d)(float,float,float,float) r0.x, l(7, 0, 0, 0), t120.wxyz
  lt r0.y, r1.y, r1.x
  mul r3.xy, r0.wzww, l(15.000000, 150.000000, 0.000000, 0.000000)
  lt r0.z, r3.x, r1.x
  and r0.y, r0.y, r0.z
  and r0.y, r0.y, l(1)
  lt r0.z, r1.x, r3.y
  and r0.y, r0.y, r0.z
  add r0.z, r1.y, r1.x
  mad r0.z, r0.w, l(3.000000), r0.z
  min r2.xyz, r0.zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyzw, r2.xyzw, l(0.720000, 0.400000, 0.080000, 0.800000)
  mov r1.w, r2.w
  movc r3.xyzw, r0.yyyy, r3.xyzw, r1.xyzw
  eq r4.xyzw, r0.xxxx, l(4.000000, 3.000000, 2.000000, 1.000000)
  mul r5.xyzw, r3.xyzw, l(0.800000, 0.800000, 0.800000, 0.800000)
  movc r3.xyzw, r4.xxxx, r5.xyzw, r3.xyzw
  mul r5.xyzw, r3.xyzw, l(0.600000, 0.600000, 0.600000, 0.600000)
  movc r3.xyzw, r4.yyyy, r5.xyzw, r3.xyzw
  mul r5.xyzw, r3.xyzw, l(0.400000, 0.400000, 0.400000, 0.400000)
  movc r3.xyzw, r4.zzzz, r5.xyzw, r3.xyzw
  mul r5.xyzw, r3.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  movc r3.xyzw, r4.wwww, r5.xyzw, r3.xyzw
  eq r0.x, r0.x, l(0.000000)
  movc o0.xyzw, r0.xxxx, l(0,0,0,0), r3.xyzw
else 
  mov o0.xyz, r1.xyzx
  mov o0.w, r2.w
endif 
ret 
// Approximately 76 instruction slots used
