//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0;                        // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// IniParams                         texture  float4          1d           t120      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   x           3     NONE   float   x   
// SV_Position              0   xyzw        4      POS   float       
// TEXCOORD                 5   xyzw        5     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.x
dcl_input_ps linear v5.z
dcl_output o0.xyzw
dcl_temps 5
mad r0.xyzw, v2.xyzw, v1.xyzw, v0.xyzw
mul r0.w, r0.w, v3.x
movc r1.x, cb0[0].x, l(-1.000000), l(0)
ine r1.y, cb0[0].y, l(0)
and r1.x, r1.x, r1.y
ne r1.x, r1.x, l(0.000000)
add r2.xyzw, r0.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
mad r2.xyzw, r0.wwww, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r3.xyz, r2.wwww, r2.xyzx
ne r1.yz, cb0[0].xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r4.xyz, r0.wwww, r0.xyzx
movc r0.xyz, r1.zzzz, r4.xyzx, r0.xyzx
movc r0.xyzw, r1.yyyy, r2.xyzw, r0.xyzw
mov r3.w, r2.w
movc r0.xyzw, r1.xxxx, r3.xyzw, r0.xyzw
ld_indexable(texture1d)(float,float,float,float) r1.x, l(6, 0, 0, 0), t120.wxyz
eq r1.x, r1.x, l(1.000000)
if_nz r1.x
  ld_indexable(texture1d)(float,float,float,float) r1.x, l(5, 0, 0, 0), t120.wxyz
  ld_indexable(texture1d)(float,float,float,float) r1.y, l(18, 0, 0, 0), t120.yxzw
  ld_indexable(texture1d)(float,float,float,float) r1.z, l(19, 0, 0, 0), t120.yzxw
  eq r1.y, r1.y, l(18.000000)
  lt r1.w, l(0.435290), v0.y
  lt r2.x, v0.y, l(0.435300)
  and r1.w, r1.w, r2.x
  and r1.w, r1.w, l(1)
  eq r2.x, v2.y, l(1.000000)
  and r1.w, r1.w, r2.x
  eq r2.x, v5.z, l(0.000000)
  and r1.w, r1.w, r2.x
  mul r2.xyzw, r0.xyzx, l(0.600000, 1.800000, 0.900000, 0.800000)
  dp2 r3.y, r0.yzyy, l(1.600000, 0.400000, 0.000000, 0.000000)
  add r3.xz, r2.zzzz, r2.xxwx
  movc r3.xyz, r1.wwww, r3.xyzx, r0.xyzx
  movc r3.xyz, r1.yyyy, r3.xyzx, r0.xyzx
  eq r1.y, r1.z, l(19.000000)
  lt r1.z, l(0.454000), v2.x
  lt r1.w, v2.x, l(0.455000)
  and r1.z, r1.z, r1.w
  and r1.z, r1.z, l(1)
  eq r1.w, v0.y, l(0.000000)
  and r1.z, r1.z, r1.w
  eq r1.w, v1.x, l(1.000000)
  and r1.w, r1.w, l(1)
  and r1.z, r1.w, r1.z
  mov r4.x, l(0)
  mov r4.z, r0.x
  movc r4.xyz, r1.zzzz, r4.xxzx, r3.xyzx
  movc r3.xyz, r1.yyyy, r4.xyzx, r3.xyzx
  eq r1.xy, r1.xxxx, l(1.000000, 3.000000, 0.000000, 0.000000)
  lt r1.z, l(0.429680), v1.y
  lt r2.w, v1.y, l(0.429690)
  and r1.z, r1.z, r2.w
  and r1.z, r1.z, r1.w
  mov r2.xz, l(0,0,0,0)
  movc r2.xyz, r1.zzzz, r2.xyzx, r3.xyzx
  movc r2.xyz, r1.xxxx, r2.xyzx, r3.xyzx
  mul r3.xy, r0.xyxx, l(0.600000, 1.500000, 0.000000, 0.000000)
  mov r3.z, l(0)
  movc r1.xzw, r1.zzzz, r3.xxyz, r2.xxyz
  movc r0.xyz, r1.yyyy, r1.xzwx, r2.xyzx
endif 
mov o0.xyzw, r0.xyzw
ret 
// Approximately 64 instruction slots used
