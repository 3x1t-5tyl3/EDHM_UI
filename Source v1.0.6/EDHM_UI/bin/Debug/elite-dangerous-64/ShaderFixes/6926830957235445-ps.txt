//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0;                        // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// s0_s                              sampler      NA          NA             s0      1 
// t0                                texture  float4          2d             t0      1 
// IniParams                         texture  float4          1d           t120      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.zwzz, t0.xyzw, s0
add r0.xyzw, r0.xyzw, -v2.xyzw
mad r0.xyzw, v3.xxxx, r0.xyzw, v2.xyzw
mad r0.xyzw, r0.xyzw, v1.xyzw, v0.xyzw
mul r0.w, r0.w, v3.y
movc r1.x, cb0[0].x, l(-1.000000), l(0)
ine r1.y, cb0[0].y, l(0)
and r1.x, r1.x, r1.y
ne r1.x, r1.x, l(0.000000)
add r2.xyzw, r0.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
mad r2.xyzw, r0.wwww, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r3.xyz, r2.wwww, r2.xyzx
ne r1.yz, cb0[0].xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r4.xyz, r0.wwww, r0.xyzx
movc r0.xyz, r1.zzzz, r4.xyzx, r0.xyzx
movc r0.xyzw, r1.yyyy, r2.xyzw, r0.xyzw
mov r3.w, r2.w
movc r0.xyzw, r1.xxxx, r3.xyzw, r0.xyzw
ld_indexable(texture1d)(float,float,float,float) r1.x, l(6, 0, 0, 0), t120.wxyz
eq r1.x, r1.x, l(1.000000)
if_nz r1.x
  ld_indexable(texture1d)(float,float,float,float) r1.x, l(7, 0, 0, 0), t120.wxyz
  lt r1.y, l(0.114000), v2.y
  dp2 r2.y, r0.yzyy, l(1.320000, -1.135000, 0.000000, 0.000000)
  dp2 r2.z, r0.xzxx, l(0.600000, 0.023000, 0.000000, 0.000000)
  mov r2.x, r0.x
  movc r0.xyz, r1.yyyy, r2.xyzx, r0.xyzx
  eq r2.xyzw, r1.xxxx, l(4.000000, 3.000000, 2.000000, 1.000000)
  mul r3.xyzw, r0.xyzw, l(0.800000, 0.800000, 0.800000, 0.800000)
  movc r3.xyzw, r2.xxxx, r3.xyzw, r0.xyzw
  mul r4.xyzw, r3.xyzw, l(0.600000, 0.600000, 0.600000, 0.600000)
  movc r3.xyzw, r2.yyyy, r4.xyzw, r3.xyzw
  mul r4.xyzw, r3.xyzw, l(0.400000, 0.400000, 0.400000, 0.400000)
  movc r3.xyzw, r2.zzzz, r4.xyzw, r3.xyzw
  mul r4.xyzw, r3.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  movc r2.xyzw, r2.wwww, r4.xyzw, r3.xyzw
  eq r1.x, r1.x, l(0.000000)
  movc o0.xyzw, r1.xxxx, l(0,0,0,0), r2.xyzw
else 
  mov o0.xyzw, r0.xyzw
endif 
ret 
// Approximately 42 instruction slots used
