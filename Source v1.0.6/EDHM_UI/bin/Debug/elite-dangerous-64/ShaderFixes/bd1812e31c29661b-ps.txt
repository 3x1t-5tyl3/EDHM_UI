//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0[29];                    // Offset:    0 Size:   464
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// s0_s                              sampler      NA          NA             s0      1 
// s1_s                              sampler      NA          NA             s1      1 
// s2_s                              sampler      NA          NA             s2      1 
// t0                                texture  float4          2d             t0      1 
// t1                                texture  float4          2d             t1      1 
// t2                                texture  float4          2d             t2      1 
// t3                                texture  float4          2d             t3      1 
// t4                                texture  float4          2d             t4      1 
// IniParams                         texture  float4          1d           t120      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer CB0[29], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 9
mul r0.xyz, v0.yyyy, cb0[1].xywx
mad r0.xyz, v0.xxxx, cb0[0].xywx, r0.xyzx
mad r0.xyz, v0.zzzz, cb0[2].xywx, r0.xyzx
add r0.xyz, r0.xyzx, cb0[3].xywx
div r0.xy, r0.xyxx, r0.zzzz
mad r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
add r0.z, -r0.y, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xzxx, t0.xyzw, s2
dp3 r0.y, v0.xyzx, v0.xyzx
sqrt r0.y, r0.y
add r0.x, -r0.y, r0.x
add r0.x, r0.x, l(0.500000)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
ld_indexable(texture1d)(float,float,float,float) r0.x, l(7, 0, 0, 0), t120.wxyz
eq r1.xyzw, r0.xxxx, l(4.000000, 3.000000, 2.000000, 1.000000)
lt r0.y, l(0.000000), cb0[9].z
mul r0.z, cb0[10].x, l(100000.000000)
add r0.w, -cb0[9].z, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r2.xy, v1.xyxx, l(25.000000, 25.000000, 0.000000, 0.000000)
round_ni r2.xy, r2.xyxx
div r2.xy, r0.zzzz, r2.xyxx
dp2 r2.x, r2.xyxx, l(1.618034, 2.618034, 0.000000, 0.000000)
frc r2.y, r2.x
add r2.xw, v1.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
mul r2.xw, r2.xxxw, l(25.000000, 0.000000, 0.000000, 25.000000)
round_ni r2.xw, r2.xxxw
div r2.xw, r0.zzzz, r2.xxxw
dp2 r2.x, r2.xwxx, l(1.618034, 2.618034, 0.000000, 0.000000)
frc r3.z, r2.x
lt r2.x, cb0[9].z, r2.y
lt r2.w, r3.z, r2.y
mov r2.z, l(0)
mov r3.y, l(0)
movc r2.yz, r2.wwww, r2.yyzy, r3.yyzy
add_sat r2.yz, r2.yyzy, -cb0[9].zzzz
mad r2.yz, r2.yyzy, r0.wwww, l(0.000000, -0.500000, -0.500000, 0.000000)
add r2.yz, r2.yyzy, r2.yyzy
and r2.x, r2.x, l(0x3f800000)
mul r2.xy, r2.xxxx, r2.yzyy
lt r2.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xxxy
lt r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.zw, r2.zzzw, l(0, 0, 1, 1)
iadd r2.xy, r2.xyxx, r2.zwzz
itof r2.xy, r2.xyxx
mul r2.xy, r2.xyxx, l(0.040000, 0.040000, 0.000000, 0.000000)
and r0.z, r0.z, r0.y
and r2.xy, r0.yyyy, r2.xyxx
deriv_rtx_coarse r3.xy, v1.xyxx
deriv_rty_coarse r3.zw, v1.xxxy
max r0.y, cb0[8].w, l(1.000000)
mul r3.xyzw, r3.xyzw, cb0[25].zzzz
add r2.xy, r2.xyxx, v1.xyxx
mad r4.xyzw, -r3.xyzw, r0.yyyy, r2.xyxy
mad r2.zw, -r3.zzzw, r0.yyyy, r4.xxxy
sample_indexable(texture2d)(float,float,float,float) r5.x, r2.zwzz, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r5.y, r4.zwzz, t1.yxzw, s1
mad r6.xyzw, r3.xyzw, r0.yyyy, r2.xyxy
mad r2.zw, -r3.zzzw, r0.yyyy, r6.xxxy
sample_indexable(texture2d)(float,float,float,float) r5.z, r2.zwzz, t1.yzxw, s1
sample_indexable(texture2d)(float,float,float,float) r5.w, r4.xyxx, t1.yzwx, s1
sample_indexable(texture2d)(float,float,float,float) r7.x, r6.xyxx, t1.xyzw, s1
mad r2.zw, r3.zzzw, r0.yyyy, r4.xxxy
sample_indexable(texture2d)(float,float,float,float) r7.y, r2.zwzz, t1.yxzw, s1
sample_indexable(texture2d)(float,float,float,float) r7.z, r6.zwzz, t1.yzxw, s1
mad r2.zw, r3.zzzw, r0.yyyy, r6.xxxy
sample_indexable(texture2d)(float,float,float,float) r7.w, r2.zwzz, t1.yzwx, s1
lt r3.xyzw, r5.xyzw, l(100.000000, 100.000000, 100.000000, 100.000000)
or r2.zw, r3.xxxy, r3.zzzw
or r0.y, r2.z, r2.w
lt r3.xyzw, r7.xyzw, l(100.000000, 100.000000, 100.000000, 100.000000)
or r2.zw, r3.xxxy, r3.zzzw
or r2.z, r2.z, r2.w
or r0.y, r0.y, r2.z
itof r0.y, r0.y
ne r0.y, r0.y, l(0.000000)
if_nz r0.y
  movc r0.y, r1.x, l(0.800000), l(1.000000)
  movc r0.y, r1.y, l(0.600000), r0.y
  movc r0.y, r1.z, l(0.400000), r0.y
  movc r0.y, r1.w, l(0.200000), r0.y
  sample_indexable(texture2d)(float,float,float,float) r2.z, v1.xyxx, t1.yzxw, s1
  dp3 r2.w, v0.xyzx, cb0[4].xyzx
  div r3.xyz, v0.xyzx, r2.wwww
  mul r3.xyz, r2.zzzz, r3.xyzx
  dp3 r2.w, r3.xyzx, cb0[11].xyzx
  mul r4.x, r2.w, cb0[14].x
  dp3 r2.w, r3.xyzx, cb0[12].xyzx
  mul r4.y, r2.w, cb0[14].y
  add r3.xy, r4.xyxx, cb0[13].xyxx
  sample_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t2.xyzw, s0
  mul r3.x, r5.x, l(-3.000000)
  mad r3.y, r5.w, l(-10.000000), r3.x
  mad r3.y, r7.y, l(-3.000000), r3.y
  mad r3.y, r5.z, l(3.000000), r3.y
  mad r3.y, r7.x, l(10.000000), r3.y
  mad r3.y, r7.w, l(3.000000), r3.y
  mad r3.x, r5.y, l(-10.000000), r3.x
  mad r3.x, r5.z, l(-3.000000), r3.x
  mad r3.x, r7.y, l(3.000000), r3.x
  mad r3.x, r7.z, l(10.000000), r3.x
  mad r3.x, r7.w, l(3.000000), r3.x
  mul r3.x, r3.x, r3.x
  mad r3.x, r3.y, r3.y, r3.x
  sqrt r3.x, r3.x
  mul r3.y, r3.x, cb0[25].x
  min r3.y, r3.y, cb0[25].w
  mul_sat r3.z, r3.y, cb0[9].y
  lt r2.z, r2.z, l(1000.000000)
  and r2.z, r2.z, cb0[24].y
  mad r2.w, r2.w, cb0[13].z, cb0[13].w
  mul_sat r3.x, r3.x, cb0[26].y
  log r3.x, r3.x
  mul r3.x, r3.x, cb0[26].x
  exp r3.x, r3.x
  mul r0.y, r0.y, r3.x
  mul r4.xyz, cb0[24].wwww, cb0[28].xyzx
  mul r4.xyz, r2.wwww, r4.xyzx
  mul r5.xyz, cb0[25].yyyy, cb0[27].xyzx
  mul r2.w, cb0[24].z, cb0[24].z
  mul r5.xyz, r5.xyzx, r2.wwww
  mad r5.xyz, r5.xyzx, cb0[24].zzzz, -r4.xyzx
  mad r4.xyz, r0.yyyy, r5.xyzx, r4.xyzx
  ne r0.y, cb0[24].x, l(0.000000)
  if_nz r0.y
    sample_l_indexable(texture2d)(float,float,float,float) r0.y, r2.xyxx, t4.yxzw, s1, l(0.000000)
    lt r2.x, r0.y, l(1.000000)
    if_nz r2.x
      mul r0.y, r0.y, l(255.000000)
      round_ni r0.y, r0.y
      max r0.y, r0.y, l(0.000000)
      min r0.y, r0.y, l(9.000000)
      ftou r0.y, r0.y
      utof r0.y, r0.y
      ftoi r2.x, r0.y
      ieq r5.xyz, r2.xxxx, l(1, 2, 3, 0)
      ieq r6.xyzw, r2.xxxx, l(6, 7, 8, 9)
      ieq r3.xw, r2.xxxx, l(4, 0, 0, 5)
      ne r0.y, l(0.000000, 0.000000, 0.000000, 0.000000), r0.y
      movc r0.y, r0.y, l(0), l(1.000000)
      and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      and r3.xw, r3.xxxw, l(0x3f800000, 0, 0, 0x3f800000)
      and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
      mul r7.xyzw, r0.yyyy, cb0[19].xyzw
      mad r7.xyzw, r5.xxxx, cb0[19].xyzw, r7.xyzw
      mad r7.xyzw, r5.yyyy, cb0[20].xyzw, r7.xyzw
      mad r7.xyzw, r5.zzzz, cb0[20].xyzw, r7.xyzw
      mad r7.xyzw, r3.xxxx, cb0[21].xyzw, r7.xyzw
      mad r7.xyzw, r3.wwww, cb0[21].xyzw, r7.xyzw
      mad r7.xyzw, r6.xxxx, cb0[22].xyzw, r7.xyzw
      mad r7.xyzw, r6.yyyy, cb0[22].xyzw, r7.xyzw
      mad r7.xyzw, r6.zzzz, cb0[23].xyzw, r7.xyzw
      mad r7.xyzw, r6.wwww, cb0[23].xyzw, r7.xyzw
      and r2.xy, r2.xxxx, l(3, 1, 0, 0)
      itof r2.xy, r2.xyxx
      mul r8.xyzw, r0.yyyy, cb0[15].xyzw
      mad r8.xyzw, r5.xxxx, cb0[15].xyzw, r8.xyzw
      mad r8.xyzw, r5.yyyy, cb0[15].xyzw, r8.xyzw
      mad r5.xyzw, r5.zzzz, cb0[15].xyzw, r8.xyzw
      mad r5.xyzw, r3.xxxx, cb0[16].xyzw, r5.xyzw
      mad r5.xyzw, r3.wwww, cb0[16].xyzw, r5.xyzw
      mad r5.xyzw, r6.xxxx, cb0[16].xyzw, r5.xyzw
      mad r5.xyzw, r6.yyyy, cb0[16].xyzw, r5.xyzw
      mad r5.xyzw, r6.zzzz, cb0[17].xyzw, r5.xyzw
      mad r5.xyzw, r6.wwww, cb0[17].xyzw, r5.xyzw
      ftou r0.y, r2.x
      dp4 r0.y, r5.xyzw, icb[r0.y + 0].xyzw
      ne r2.x, l(0.000000, 0.000000, 0.000000, 0.000000), r2.y
      movc r5.xy, r2.xxxx, r7.zwzz, r7.xyxx
      mul r2.xy, cb0[18].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
      frc r3.x, r5.y
      add r5.z, -r3.x, r5.y
      mad r2.xy, r5.xzxx, cb0[18].zwzz, r2.xyxx
      dp3 r3.w, r4.xyzx, l(0.308600, 0.609400, 0.082000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r2.xyxx, t3.xyzw, s2, l(0.000000)
      mov r6.x, l(0)
      mov r6.y, cb0[18].w
      add r2.xy, r2.xyxx, r6.xyxx
      sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r2.xyxx, t3.xyzw, s2, l(0.000000)
      mul r7.w, r5.w, r5.w
      mad r5.xyz, r5.xyzx, r5.xyzx, -r4.xyzx
      mad r7.xyz, r7.wwww, r5.xyzx, r4.xyzx
      mul r5.w, r6.w, r6.w
      mad r6.xyz, r6.xyzx, r6.xyzx, -r4.xyzx
      mad r5.xyz, r5.wwww, r6.xyzx, r4.xyzx
      add r5.xyzw, r5.xyzw, -r7.xyzw
      mad r5.xyzw, r3.xxxx, r5.xyzw, r7.xyzw
      mul r0.y, r0.y, r3.w
      mad r0.y, r5.w, r0.y, l(1.000000)
      mul r4.xyz, r0.yyyy, r5.xyzx
    endif 
  endif 
  mul r3.xyw, r3.yyyy, r4.xyxz
  mul r2.xyw, r2.wwww, r3.xyxw
  mul r0.y, r3.z, cb0[24].z
else 
  mov r0.y, l(0)
  mov r2.xyzw, l(0,0,0,0)
endif 
add r3.xyzw, v1.xyxy, l(0.000000, 0.040000, 0.500000, 0.540000)
mul r3.xyzw, r3.xyzw, l(25.000000, 25.000000, 25.000000, 25.000000)
round_ni r3.xyzw, r3.xyzw
div r3.xyzw, r0.zzzz, r3.xyzw
dp2 r3.x, r3.xyxx, l(1.618034, 2.618034, 0.000000, 0.000000)
frc r4.x, r3.x
dp2 r3.x, r3.zwzz, l(1.618034, 2.618034, 0.000000, 0.000000)
frc r4.w, r3.x
lt r3.x, cb0[9].z, r4.x
lt r3.y, r4.w, r4.x
mov r4.yz, l(0,0,0,0)
movc r3.yz, r3.yyyy, r4.xxyx, r4.zzwz
add_sat r3.yz, r3.yyzy, -cb0[9].zzzz
mad r3.yz, r3.yyzy, r0.wwww, l(0.000000, -0.500000, -0.500000, 0.000000)
add r3.yz, r3.yyzy, r3.yyzy
and r3.x, r3.x, l(0x3f800000)
mul r3.xy, r3.xxxx, r3.yzyy
lt r3.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xxxy
lt r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.zw, r3.zzzw, l(0, 0, 1, 1)
iadd r3.xy, r3.xyxx, r3.zwzz
add r4.xyzw, v1.xyxy, l(-0.040000, 0.000000, 0.460000, 0.500000)
mul r4.xyzw, r4.xyzw, l(25.000000, 25.000000, 25.000000, 25.000000)
round_ni r4.xyzw, r4.xyzw
div r4.xyzw, r0.zzzz, r4.xyzw
dp2 r3.z, r4.xyxx, l(1.618034, 2.618034, 0.000000, 0.000000)
frc r5.x, r3.z
dp2 r3.z, r4.zwzz, l(1.618034, 2.618034, 0.000000, 0.000000)
frc r5.w, r3.z
lt r3.z, cb0[9].z, r5.x
lt r3.w, r5.w, r5.x
mov r5.yz, l(0,0,0,0)
movc r4.xy, r3.wwww, r5.xyxx, r5.zwzz
add_sat r4.xy, r4.xyxx, -cb0[9].zzzz
mad r4.xy, r4.xyxx, r0.wwww, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r4.xy, r4.xyxx, r4.xyxx
and r3.z, r3.z, l(0x3f800000)
mul r3.zw, r3.zzzz, r4.xxxy
lt r4.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r3.zwzz
lt r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r4.xy, r4.xyxx, l(1, 1, 0, 0)
iadd r3.zw, r3.zzzw, r4.xxxy
itof r3.xyzw, r3.xyzw
add r4.xyzw, v1.xyxy, l(0.040000, 0.000000, 0.540000, 0.500000)
mul r4.xyzw, r4.xyzw, l(25.000000, 25.000000, 25.000000, 25.000000)
round_ni r4.xyzw, r4.xyzw
div r4.xyzw, r0.zzzz, r4.xyzw
dp2 r4.x, r4.xyxx, l(1.618034, 2.618034, 0.000000, 0.000000)
frc r5.x, r4.x
dp2 r4.x, r4.zwzz, l(1.618034, 2.618034, 0.000000, 0.000000)
frc r5.w, r4.x
lt r4.x, cb0[9].z, r5.x
lt r4.y, r5.w, r5.x
mov r5.yz, l(0,0,0,0)
movc r4.yz, r4.yyyy, r5.xxyx, r5.zzwz
add_sat r4.yz, r4.yyzy, -cb0[9].zzzz
mad r4.yz, r4.yyzy, r0.wwww, l(0.000000, -0.500000, -0.500000, 0.000000)
add r4.yz, r4.yyzy, r4.yyzy
and r4.x, r4.x, l(0x3f800000)
mul r4.xy, r4.xxxx, r4.yzyy
lt r4.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xxxy
lt r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r4.zw, r4.zzzw, l(0, 0, 1, 1)
iadd r4.xy, r4.xyxx, r4.zwzz
itof r4.xy, r4.xyxx
add r5.xyzw, v1.xyxy, l(0.000000, -0.040000, 0.500000, 0.460000)
mul r5.xyzw, r5.xyzw, l(25.000000, 25.000000, 25.000000, 25.000000)
round_ni r5.xyzw, r5.xyzw
div r5.xyzw, r0.zzzz, r5.xyzw
dp2 r0.z, r5.xyxx, l(1.618034, 2.618034, 0.000000, 0.000000)
frc r6.x, r0.z
dp2 r0.z, r5.zwzz, l(1.618034, 2.618034, 0.000000, 0.000000)
frc r6.w, r0.z
lt r0.z, cb0[9].z, r6.x
lt r4.z, r6.w, r6.x
mov r6.yz, l(0,0,0,0)
movc r4.zw, r4.zzzz, r6.xxxy, r6.zzzw
add_sat r4.zw, r4.zzzw, -cb0[9].zzzz
mad r4.zw, r4.zzzw, r0.wwww, l(0.000000, 0.000000, -0.500000, -0.500000)
add r4.zw, r4.zzzw, r4.zzzw
and r0.z, r0.z, l(0x3f800000)
mul r0.zw, r0.zzzz, r4.zzzw
lt r4.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r0.zzzw
lt r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r4.zw, r4.zzzw, l(0, 0, 1, 1)
iadd r0.zw, r0.zzzw, r4.zzzw
itof r0.zw, r0.zzzw
lt r3.y, r3.y, l(-0.900000)
and r3.y, r3.y, l(0xbf800000)
lt r3.x, |r3.x|, l(0.100000)
and r3.x, r3.y, r3.x
lt r3.y, |r3.w|, l(0.100000)
and r3.y, r3.y, l(0xbf800000)
lt r3.z, l(0.900000), r3.z
and r3.y, r3.y, r3.z
ftoi r3.xy, r3.xyxx
or r3.x, r3.x, r3.y
lt r3.y, |r4.y|, l(0.100000)
and r3.y, r3.y, l(0xbf800000)
lt r3.z, r4.x, l(-0.900000)
and r3.y, r3.y, r3.z
ftoi r3.y, r3.y
or r3.x, r3.x, r3.y
lt r0.w, l(0.900000), r0.w
and r0.w, r0.w, l(0xbf800000)
lt r0.z, |r0.z|, l(0.100000)
and r0.z, r0.w, r0.z
ftoi r0.z, r0.z
or r0.z, r3.x, r0.z
itof r0.z, r0.z
ne r0.z, l(0.000000, 0.000000, 0.000000, 0.000000), r0.z
movc r0.y, r0.z, l(0), r0.y
max r3.w, r0.y, r2.z
add r0.y, r3.w, l(-0.000010)
lt r0.y, r0.y, l(0.000000)
discard_nz r0.y
mul r0.yzw, r2.xxyw, cb0[5].xxxx
mul r0.yzw, r0.yyzw, cb0[4].wwww
mul r2.xyz, r0.zzzz, cb0[7].xyzx
mad r2.xyz, r0.yyyy, cb0[6].xyzx, r2.xyzx
mad r0.yzw, r0.wwww, cb0[8].xxyz, r2.xxyz
ld_indexable(texture1d)(float,float,float,float) r2.x, l(6, 0, 0, 0), t120.wxyz
eq r2.x, r2.x, l(1.000000)
if_nz r2.x
  lt r2.x, r0.z, r0.y
  mul r2.yz, r0.wwzw, l(0.000000, 5.000000, 50.000000, 0.000000)
  lt r2.y, r2.y, r0.y
  and r2.x, r2.x, r2.y
  and r2.x, r2.x, l(1)
  lt r2.y, r0.y, r2.z
  and r2.x, r2.x, r2.y
  mul r2.yzw, r0.yyzy, l(0.000000, 0.370000, 3.500000, 0.045000)
  movc r3.xyz, r2.xxxx, r2.yzwy, r0.yzwy
  mul r2.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
  mul r4.xyzw, r3.xyzw, l(0.200000, 0.200000, 0.200000, 0.200000)
  movc r2.xyzw, r1.xxxx, r4.xyzw, r2.xyzw
  mul r4.xyzw, r2.xyzw, l(0.200000, 0.200000, 0.200000, 0.200000)
  movc r2.xyzw, r1.yyyy, r4.xyzw, r2.xyzw
  mul r4.xyzw, r2.xyzw, l(0.100000, 0.100000, 0.100000, 0.100000)
  movc r2.xyzw, r1.zzzz, r4.xyzw, r2.xyzw
  mul r4.xyzw, r2.xyzw, l(0.050000, 0.050000, 0.050000, 0.050000)
  movc r1.xyzw, r1.wwww, r4.xyzw, r2.xyzw
  eq r0.x, r0.x, l(0.000000)
  movc o0.xyzw, r0.xxxx, l(0,0,0,0), r1.xyzw
else 
  mov o0.w, r3.w
  mov o0.xyz, r0.yzwy
endif 
ret 
// Approximately 349 instruction slots used
