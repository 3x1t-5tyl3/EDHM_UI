//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0[2];                     // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// IniParams                         texture  float4          1d           t120      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   x           2     NONE   float   x   
// SV_Position              0   xyzw        3      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.x
dcl_output o0.xyzw
dcl_temps 7
mul r0.x, cb0[0].w, cb0[1].y
mul r0.y, cb0[0].w, cb0[0].z
mul r0.xy, r0.xyxx, l(1000.000000, 1000.000000, 0.000000, 0.000000)
div r0.x, r0.x, r0.y
ge r0.z, r0.x, -r0.x
frc r0.x, |r0.x|
movc r0.x, r0.z, r0.x, -r0.x
mad r0.x, r0.x, r0.y, l(250.000000)
add r0.y, -cb0[1].w, l(1.000000)
div r1.x, r0.y, cb0[1].w
dp2 r0.y, v1.xyxx, v1.xyxx
sqrt r0.y, r0.y
mad r1.y, r0.y, l(6.560000), l(-1.000000)
mad r0.y, cb0[0].x, l(-0.500000), r0.y
div r0.y, |r0.y|, |v2.x|
min r0.y, r0.y, l(1.000000)
mul r0.zw, r1.xxxy, l(0.000000, 0.000000, 1000.000000, 3.321928)
exp r0.w, r0.w
mad r0.z, r0.w, l(500.000000), r0.z
add r0.x, r0.x, -r0.z
mul r0.x, |r0.x|, cb0[1].w
mad_sat r0.x, r0.x, l(-0.001000), l(1.000000)
mul r0.x, r0.x, cb0[1].z
add r0.zw, v1.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
dp2 r0.z, r0.zwzz, r0.zwzz
sqrt r0.z, r0.z
ge r0.w, l(0.500000), r0.z
add r0.z, -r0.z, l(0.150000)
max r0.z, r0.z, l(0.000000)
mad r0.z, r0.z, l(40.000000), l(1.200000)
and r1.xy, r0.wwww, l(0x3f800000, 0x3d4ccccd, 0, 0)
mad_sat r0.x, r0.x, l(1.100000), r1.y
mul r2.w, r0.x, cb0[1].x
mul r1.yzw, v0.xxyz, cb0[0].yyyy
mul r0.xzw, r0.zzzz, r1.yyzw
mul r0.xzw, r1.xxxx, r0.xxzw
mul r0.xyz, r0.yyyy, r0.xzwx
mul r0.xyw, r0.xyxz, v0.wwww
ld_indexable(texture1d)(float,float,float,float) r1.x, l(6, 0, 0, 0), t120.wxyz
eq r1.x, r1.x, l(1.000000)
if_nz r1.x
  ld_indexable(texture1d)(float,float,float,float) r1.xy, l(7, 0, 0, 0), t120.xwyz
  lt r1.z, r0.y, r0.x
  mul r3.xy, r0.wyww, l(5.000000, 50.000000, 0.000000, 0.000000)
  lt r1.w, r3.x, r0.x
  and r1.z, r1.z, r1.w
  and r1.z, r1.z, l(1)
  lt r1.w, r0.x, r3.y
  and r1.z, r1.z, r1.w
  eq r3.xyzw, r1.xxyy, l(10.000000, 11.000000, 4.000000, 3.000000)
  add r1.x, r0.y, r0.x
  mad r0.z, v0.w, r0.z, r1.x
  min r0.z, r0.z, l(1.000000)
  mul r4.xyz, r0.zzzz, l(0.900000, 0.500000, 0.100000, 0.000000)
  movc r4.xyz, r3.xxxx, r4.xyzx, r0.xywx
  movc r5.xyz, r3.xxxx, r0.zzzz, r0.xywx
  dp2 r6.x, r5.xzxx, l(0.370000, 0.500000, 0.000000, 0.000000)
  dp2 r6.y, r5.yzyy, l(1.850000, -1.800000, 0.000000, 0.000000)
  mul r6.z, r5.x, l(0.045000)
  movc r4.xyz, r3.yyyy, r6.xyzx, r4.xyzx
  movc r2.xyz, r1.zzzz, r4.xyzx, r0.xywx
  movc r1.xzw, r1.zzzz, r5.xxyx, r0.xxyx
  lt r0.z, r2.x, r2.y
  mul r3.x, r2.z, l(3.000000)
  lt r3.x, r3.x, r2.y
  and r0.z, r0.z, r3.x
  and r0.z, r0.z, l(1)
  mul r4.xyz, r1.xzwx, l(0.010000, 1.200000, 0.015000, 0.000000)
  mul r4.w, r2.w, l(0.700000)
  movc r4.xyzw, r0.zzzz, r4.xyzw, r2.xyzw
  mul r5.xyzw, r4.xyzw, l(0.800000, 0.800000, 0.800000, 0.800000)
  movc r4.xyzw, r3.zzzz, r5.xyzw, r4.xyzw
  mul r5.xyzw, r4.xyzw, l(0.600000, 0.600000, 0.600000, 0.600000)
  movc r3.xyzw, r3.wwww, r5.xyzw, r4.xyzw
  eq r1.xyz, r1.yyyy, l(2.000000, 1.000000, 0.000000, 0.000000)
  mul r4.xyzw, r3.xyzw, l(0.400000, 0.400000, 0.400000, 0.400000)
  movc r3.xyzw, r1.xxxx, r4.xyzw, r3.xyzw
  mul r4.xyzw, r3.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  movc r3.xyzw, r1.yyyy, r4.xyzw, r3.xyzw
  movc o0.xyzw, r1.zzzz, l(0,0,0,0), r3.xyzw
else 
  mov o0.w, r2.w
  mov o0.xyz, r0.xywx
endif 
ret 
// Approximately 85 instruction slots used
