//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0[5];                     // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// IniParams                         texture  float4          1d           t120      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
add r0.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
lt r0.xy, r0.xxxx, l(0.200000, 0.500000, 0.000000, 0.000000)
and r0.y, r0.y, l(0x3f000000)
movc r0.w, r0.x, l(1.000000), r0.y
add r1.x, r0.w, l(-0.000010)
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
mul r1.xyz, r0.wwww, cb0[4].xyzx
mul r1.xyz, r1.xyzx, cb0[3].wwww
mul r1.xyz, r1.xyzx, cb0[0].yyyy
mul r1.xyz, r1.xyzx, cb0[0].xxxx
mad r1.xyz, r1.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000), v0.xyzx
mul r2.xyz, r1.yyyy, cb0[2].xyzx
mad r1.xyw, r1.xxxx, cb0[1].xyxz, r2.xyxz
mad r1.xyz, r1.zzzz, cb0[3].xyzx, r1.xywx
ld_indexable(texture1d)(float,float,float,float) r2.x, l(6, 0, 0, 0), t120.wxyz
ld_indexable(texture1d)(float,float,float,float) r2.y, l(7, 0, 0, 0), t120.xwyz
ld_indexable(texture1d)(float,float,float,float) r2.z, l(17, 0, 0, 0), t120.yzxw
eq r2.xz, r2.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
add r2.w, r1.y, r1.x
add r2.w, r1.z, r2.w
min r0.y, r2.w, l(1.000000)
mov r0.xz, l(0,0,0,0)
mov r1.w, r0.w
movc r0.xyzw, r2.zzzz, r0.xyzw, r1.xyzw
eq r3.xyzw, r2.yyyy, l(4.000000, 3.000000, 2.000000, 1.000000)
mul r4.xyzw, r0.xyzw, l(0.750000, 0.750000, 0.750000, 0.750000)
movc r0.xyzw, r3.xxxx, r4.xyzw, r0.xyzw
mul r4.xyzw, r0.xyzw, l(0.550000, 0.550000, 0.550000, 0.550000)
movc r0.xyzw, r3.yyyy, r4.xyzw, r0.xyzw
mul r4.xyzw, r0.xyzw, l(0.400000, 0.400000, 0.400000, 0.400000)
movc r0.xyzw, r3.zzzz, r4.xyzw, r0.xyzw
mul r4.xyzw, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
movc r0.xyzw, r3.wwww, r4.xyzw, r0.xyzw
eq r2.y, r2.y, l(0.000000)
movc r0.xyzw, r2.yyyy, l(0,0,0,0), r0.xyzw
movc o0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
ret 
// Approximately 40 instruction slots used
