// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Sep 25 12:39:19 2020
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    1   xyzw        0     NONE   float   x  w
// COLOR                    2   xyzw        1     NONE   float   x  w
// POSITION                 0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// SV_Position              0   xyzw        3      POS   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
vs_4_1
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_input v0.xw
dcl_input v1.xw
dcl_input v2.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output_siv o3.xyzw, position
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 2
ine r0.xy, cb0[0].zwzz, l(0, 0, 0, 0)
and r0.x, r0.y, r0.x
if_nz r0.x
  ine r0.xy, cb0[0].xyxx, l(0, 0, 0, 0)
  and r0.x, r0.y, r0.x
  if_nz r0.x
    mad r0.x, v1.x, l(255.000000), l(0.100000)
    ftoi r0.x, r0.x
    mov o2.x, v0.w
  else
    if_nz cb0[0].y
      mad r0.y, v1.x, l(255.000000), l(0.100000)
      ftoi r0.x, r0.y
      mov o2.x, v1.w
    else
      mad r0.y, v0.x, l(255.000000), l(0.100000)
      ftoi r0.x, r0.y
      mov o2.x, v0.w
    endif
  endif
else
  if_nz cb0[0].z
    mad r0.y, v0.x, l(255.000000), l(0.100000)
    ftoi r0.x, r0.y
    mov o2.x, v0.w
  else
    if_nz cb0[0].x
      mov o2.x, v0.w
    else
      mov o2.x, l(0)
    endif
    mov r0.x, l(0)
  endif
endif
ishl r0.x, r0.x, l(3)
dp4 o3.x, v2.xyzw, cb1[r0.x + 4].xyzw
iadd r1.xyzw, r0.xxxx, l(1, 2, 3, 4)
dp4 o3.y, v2.xyzw, cb1[r1.x + 4].xyzw
dp4 o3.z, v2.xyzw, cb1[r1.y + 4].xyzw
dp4 o3.w, v2.xyzw, cb1[r1.z + 4].xyzw
iadd r0.xyz, r0.xxxx, l(5, 6, 7, 0)
dp4 r1.y, v2.xyzw, cb1[r0.y + 4].xyzw
dp4 r1.z, v2.xyzw, cb1[r0.z + 4].xyzw
mul o2.yz, r1.yyzy, cb1[2].xxyx
mov o0.xyzw, cb1[r0.x + 4].xyzw
mov o1.xyzw, cb1[r1.w + 4].xyzw
dp4 o4.x, v2.xyzw, cb1[r1.x + 4].xyzw
dp4 o4.y, v2.xyzw, cb1[r0.y + 4].xyzw
dp4 o4.z, v2.xyzw, cb1[r1.z + 4].xyzw
dp4 o5.x, v2.xyzw, cb1[r0.x + 4].xyzw
dp4 o5.y, v2.xyzw, cb1[r0.y + 4].xyzw
dp4 o5.z, v2.xyzw, cb1[r0.z + 4].xyzw

ret
