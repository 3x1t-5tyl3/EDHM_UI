//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0[7];                     // Offset:    0 Size:   112
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// IniParams                         texture  float4          1d           t120      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
mad r0.xy, v1.xyxx, l(20.000000, 20.000000, 0.000000, 0.000000), l(-10.000000, -10.000000, 0.000000, 0.000000)
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
round_ne r0.y, r0.x
add r0.y, r0.y, -r0.x
mul r0.x, r0.x, l(0.555556)
round_ni r1.x, r0.x
mul r1.y, |r0.y|, l(5.000000)
min r0.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r0.y, r0.y, l(-1.000000)
mad r0.z, r0.y, l(2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.z
add r0.zw, v1.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
dp2 r0.z, r0.zwzz, r0.zwzz
sqrt r0.z, r0.z
mad r0.z, r0.z, l(-2.500000), l(1.000000)
max r0.z, r0.z, l(0.000000)
mul r0.y, r0.z, r0.y
add r0.zw, -v1.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mad r0.zw, |r0.zzzw|, l(0.000000, 0.000000, -70.000000, -210.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
max r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xy, r0.xxxx, r0.zwzz
mul r0.z, r0.x, r0.y
mad r0.y, r0.y, r0.x, r1.x
mad r0.x, r0.w, r0.x, r0.y
min r2.w, r0.x, l(1.000000)
add r0.x, r2.w, l(-0.000010)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
mul r0.xyw, r1.xxxx, cb0[4].xyxz
mul r0.xyw, r0.xyxw, l(1.500000, 1.500000, 0.000000, 1.500000)
mul r1.xzw, r0.zzzz, cb0[6].xxyz
mad r0.xyz, r1.xzwx, l(6.000000, 6.000000, 6.000000, 0.000000), r0.xywx
mul r1.xyz, r1.yyyy, cb0[5].xyzx
mad r0.xyz, r1.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000), r0.xyzx
mul r0.xyz, r0.xyzx, cb0[3].wwww
mul r0.xyz, r0.xyzx, cb0[0].yyyy
mad r0.xyz, r0.xyzx, cb0[0].xxxx, v0.xyzx
mul r1.xyz, r0.yyyy, cb0[2].xyzx
mad r0.xyw, r0.xxxx, cb0[1].xyxz, r1.xyxz
mad r2.xyz, r0.zzzz, cb0[3].xyzx, r0.xywx
ld_indexable(texture1d)(float,float,float,float) r0.x, l(6, 0, 0, 0), t120.wxyz
ld_indexable(texture1d)(float,float,float,float) r0.y, l(7, 0, 0, 0), t120.xwyz
eq r1.xyzw, r0.yyyy, l(4.000000, 3.000000, 2.000000, 1.000000)
mul r3.xyzw, r2.xyzw, l(0.800000, 0.800000, 0.800000, 0.800000)
movc r3.xyzw, r1.xxxx, r3.xyzw, r2.xyzw
mul r4.xyzw, r3.xyzw, l(0.600000, 0.600000, 0.600000, 0.600000)
movc r3.xyzw, r1.yyyy, r4.xyzw, r3.xyzw
mul r4.xyzw, r3.xyzw, l(0.400000, 0.400000, 0.400000, 0.400000)
movc r3.xyzw, r1.zzzz, r4.xyzw, r3.xyzw
mul r4.xyzw, r3.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
movc r1.xyzw, r1.wwww, r4.xyzw, r3.xyzw
eq r0.xy, r0.xyxx, l(1.000000, 0.000000, 0.000000, 0.000000)
movc r1.xyzw, r0.yyyy, l(0,0,0,0), r1.xyzw
movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
ret 
// Approximately 57 instruction slots used
