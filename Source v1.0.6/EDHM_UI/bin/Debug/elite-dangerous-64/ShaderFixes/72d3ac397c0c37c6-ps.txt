//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0[10];                    // Offset:    0 Size:   160
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// s0_s                              sampler      NA          NA             s0      1 
// s1_s                              sampler      NA          NA             s1      1 
// t0                                texture  float4          2d             t0      1 
// t1                                texture  float4          2d             t1      1 
// t2                                texture  float4          2d             t2      1 
// t3                                texture  float4          2d             t3      1 
// IniParams                         texture  float4          1d           t120      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
// TEXCOORD                 3   xy          3     NONE   float   xy  
// SV_Position              0   xyzw        4      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[10], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 14
sample_indexable(texture2d)(float,float,float,float) r0.xy, v3.xyxx, t2.xyzw, s0
mad r0.xy, r0.xyxx, l(2.007874, 2.007874, 0.000000, 0.000000), l(-0.999985, -0.999985, 0.000000, 0.000000)
dp2 r0.z, r0.xyxx, r0.xyxx
add r0.z, r0.z, l(-1.000000)
max r0.z, -r0.z, l(0.000000)
sqrt r0.z, r0.z
mul r1.xyz, r0.zzzz, v1.xyzx
mad r0.xzw, r0.xxxx, v2.xxyz, r1.xxyz
mad r0.xyz, r0.yyyy, v0.xyzx, r0.xzwx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r0.xyzx, -cb0[2].xyzx
mad r0.w, r0.w, l(8.000000), l(8.000000)
sqrt r0.w, r0.w
dp3 r1.y, r0.xyzx, cb0[0].xyzx
dp3 r1.z, r0.xyzx, cb0[1].xyzx
div r0.xy, r1.yzyy, r0.wwww
add r0.yz, r0.xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xy, v3.xyxx, t3.ywxz, s0
mul r1.yz, r1.xxyx, cb0[3].zzwz
mad r2.xyz, -r1.xxxx, cb0[3].zzzz, cb0[7].xyzx
mad r1.xyw, cb0[7].wwww, r2.xyxz, r1.yyyy
mul r2.xyz, r1.xywx, cb0[8].xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyw, v3.xyxx, t0.xywz, s1
mul r3.xyz, r1.xywx, cb0[3].yyyy
mad r1.xyw, -r1.xyxw, cb0[3].yyyy, cb0[4].xyxz
mad r1.xyw, cb0[4].wwww, r1.xyxw, r3.xyxz
mul r3.xyz, r1.xywx, cb0[5].xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyw, v3.xyxx, t1.xywz, s1
mul r1.xyw, r1.xyxw, cb0[9].xyxz
mul r1.xyw, r1.xyxw, cb0[2].wwww
mul r1.xyw, r1.xyxw, cb0[3].xxxx
dp3 r4.x, r1.xywx, l(0.308600, 0.609400, 0.082000, 0.000000)
mad r4.xyz, r4.xxxx, cb0[6].xyzx, -r1.xywx
mad r4.xyz, cb0[6].wwww, r4.xyzx, r1.xywx
ld_indexable(texture1d)(float,float,float,float) r1.x, l(6, 0, 0, 0), t120.wxyz
eq r1.x, r1.x, l(1.000000)
if_nz r1.x
  ld_indexable(texture1d)(float,float,float,float) r1.x, l(2, 0, 0, 0), t120.xyzw
  ld_indexable(texture1d)(float,float,float,float) r1.y, l(3, 0, 0, 0), t120.xzyw
  eq r5.xyzw, r1.yyyy, l(1.000000, 3.000000, 4.000000, 19.000000)
  or r5.xy, r5.ywyy, r5.xzxx
  and r5.xy, r5.xyxx, l(1, 1, 0, 0)
  lt r1.w, v0.w, l(1.100000)
  mul r6.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r6.w, l(0.500000)
  mul r7.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r7.w, l(0.500000)
  mov r2.w, l(1.000000)
  movc r6.xyzw, r1.wwww, r6.xyzw, r2.xyzw
  mov r4.w, l(1.000000)
  movc r7.xyzw, r1.wwww, r7.xyzw, r4.xyzw
  movc r6.xyzw, r5.xxxx, r6.xyzw, r2.xyzw
  movc r7.xyzw, r5.xxxx, r7.xyzw, r4.xyzw
  lt r1.w, l(0.500000), r7.y
  mov r0.x, r1.z
  mov r0.w, l(0)
  movc r8.xyzw, r1.wwww, l(0,0,0,0), r0.xyzw
  mov r3.w, cb0[8].w
  movc r9.xyzw, r1.wwww, l(0,0,0,0), r3.xyzw
  movc r10.xyzw, r1.wwww, l(0,0,0,0), r6.xyzw
  movc r11.xyzw, r1.wwww, l(0,0,0,0), r7.xyzw
  movc r8.xyzw, r5.yyyy, r8.xyzw, r0.xyzw
  movc r9.xyzw, r5.yyyy, r9.xyzw, r3.xyzw
  movc r6.xyzw, r5.yyyy, r10.xyzw, r6.xyzw
  movc r5.xyzw, r5.yyyy, r11.xyzw, r7.xyzw
  eq r7.xyzw, r1.yyyy, l(6.000000, 24.000000, 30.000000, 8.000000)
  or r0.x, r7.y, r7.x
  or r0.x, r7.z, r0.x
  and r0.x, r0.x, l(1)
  lt r0.w, l(0.500000), r5.x
  movc r7.xyz, r0.wwww, l(0,0,0,0), r5.xyzx
  movc r5.xyz, r0.xxxx, r7.xyzx, r5.xyzx
  eq r10.xyzw, r1.yyyy, l(21.000000, 9.000000, 10.000000, 5.000000)
  or r0.x, r7.w, r10.x
  or r0.x, r10.y, r0.x
  and r0.x, r0.x, l(1)
  lt r7.xyz, l(0.000000, 0.863300, 0.603500, 0.000000), v3.xyyx
  lt r1.yw, v3.xxxy, l(0.000000, 1.000000, 0.000000, 1.000000)
  and r0.w, r7.x, r1.y
  and r0.w, r0.w, l(1)
  and r7.xy, r0.wwww, r7.yzyy
  and r1.yw, r1.wwww, r7.xxxy
  movc r7.xyzw, r1.yyyy, l(0,0,0,0), r8.xyzw
  movc r11.xyzw, r1.yyyy, l(0,0,0,0), r9.xyzw
  movc r12.xyzw, r1.yyyy, l(0,0,0,0), r6.xyzw
  movc r13.xyzw, r1.yyyy, l(0,0,0,0), r5.xyzw
  movc r7.xyzw, r0.xxxx, r7.xyzw, r8.xyzw
  movc r8.xyzw, r0.xxxx, r11.xyzw, r9.xyzw
  movc r6.xyzw, r0.xxxx, r12.xyzw, r6.xyzw
  movc r5.xyzw, r0.xxxx, r13.xyzw, r5.xyzw
  ge r9.xyzw, v3.xyxy, l(-5.054000, 6.277000, 1.977600, 1.270100)
  ge r11.xyzw, l(-5.050000, 6.279000, 1.998200, 1.286500), v3.xyxy
  and r0.xw, r9.xxxz, r11.xxxz
  and r0.xw, r0.xxxw, l(1, 0, 0, 1)
  and r0.xw, r0.xxxw, r9.yyyw
  and r0.xw, r0.xxxw, r11.yyyw
  movc r9.xyzw, r0.xxxx, l(0,0,0,0), r7.xyzw
  movc r11.xyzw, r0.xxxx, l(0,0,0,0), r8.xyzw
  movc r12.xyzw, r0.xxxx, l(0,0,0,0), r6.xyzw
  movc r13.xyzw, r0.xxxx, l(0,0,0,0), r5.xyzw
  movc r9.xyzw, r10.zzzz, r9.xyzw, r7.xyzw
  movc r11.xyzw, r10.zzzz, r11.xyzw, r8.xyzw
  movc r12.xyzw, r10.zzzz, r12.xyzw, r6.xyzw
  movc r13.xyzw, r10.zzzz, r13.xyzw, r5.xyzw
  movc r9.xyzw, r0.wwww, l(0.500000,0.500000,0.500000,0.500000), r9.xyzw
  movc r11.xyzw, r0.wwww, l(0.200000,0.200000,0.200000,0.200000), r11.xyzw
  movc r12.xyzw, r0.wwww, l(0.001000,0.001000,0.001000,0.001000), r12.xyzw
  movc r13.xyzw, r0.wwww, l(0,0,0,0), r13.xyzw
  movc r7.xyzw, r10.zzzz, r9.xyzw, r7.xyzw
  movc r8.xyzw, r10.zzzz, r11.xyzw, r8.xyzw
  movc r6.xyzw, r10.zzzz, r12.xyzw, r6.xyzw
  movc r5.xyzw, r10.zzzz, r13.xyzw, r5.xyzw
  eq r0.x, r1.x, l(23.000000)
  and r0.x, r10.w, r0.x
  and r0.x, r0.x, l(1)
  movc r9.xyzw, r1.wwww, l(0,0,0,0), r7.xyzw
  movc r11.xyzw, r1.wwww, l(0,0,0,0), r8.xyzw
  movc r12.xyzw, r1.wwww, l(0,0,0,0), r6.xyzw
  movc r13.xyzw, r1.wwww, l(0,0,0,0), r5.xyzw
  movc o0.xyzw, r0.xxxx, r9.xyzw, r7.xyzw
  movc o1.xyzw, r0.xxxx, r11.xyzw, r8.xyzw
  movc o2.xyzw, r0.xxxx, r12.xyzw, r6.xyzw
  movc r5.xyzw, r0.xxxx, r13.xyzw, r5.xyzw
  lt r1.xyw, l(0.500000, 0.500000, 0.000000, 0.500000), r5.xyxz
  and r0.x, r10.w, r1.x
  and r0.x, r0.x, l(1)
  and r0.x, r0.x, r1.y
  and r0.x, r0.x, r1.w
  movc o3.xyz, r0.xxxx, l(0,0,0,0), r5.xyzx
  mov o3.w, r5.w
else 
  mov o0.x, r1.z
  mov o0.yz, r0.yyzy
  mov o0.w, l(0)
  mov o1.xyz, r3.xyzx
  mov o1.w, cb0[8].w
  mov o2.xyz, r2.xyzx
  mov o2.w, l(1.000000)
  mov o3.xyz, r4.xyzx
  mov o3.w, l(1.000000)
endif 
ret 
// Approximately 144 instruction slots used
